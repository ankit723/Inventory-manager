//inventory management system


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stores Store[]
}

model Store {
  id String @id @default(uuid())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId String
  products Product[]
}

enum ProductType {
  SIMPLE
  CONFIGURABLE
}

model Product {
  id String @id @default(uuid())
  name String
  sku String
  parentProductId String?
  price Int
  image String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  store Store @relation(fields: [storeId], references: [id])
  storeId String
  type ProductType
  filterGroupId String
  filterGroup FilterGroup @relation(fields: [filterGroupId], references: [id])
  uniqueFilterOptions FilterOption[] @relation("ProductToFilterOption")
  totalStock Int
  availableStock Int 
}



model FilterOption {
  id String @id @default(uuid())
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  filter Filter @relation(fields: [filterId], references: [id])
  filterId String
  product Product[] @relation("ProductToFilterOption")
}

model Filter {
  id String @id @default(uuid())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  filterGroups FilterGroup[] @relation("FilterToFilterGroup")
  filterOptions FilterOption[]
}

model FilterGroup {
  id String @id @default(uuid())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  filters Filter[] @relation("FilterToFilterGroup")
  products Product[]
}



